head	1.6;
access;
symbols
	test:1.1.1.1 hdalis:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.12.03.17.18.59;	author hdalis;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.13.04.29.50;	author hdalis;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.08.00.00.41;	author hdalis;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.18.10.24.50;	author hdalis;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.16.10.17.25;	author hdalis;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.01.21.02.12;	author hdalis;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.10.01.21.02.12;	author hdalis;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Delphi Scintilla Interface Components 0.15
@
text
@//CE_Desc_Include(helpdescriptions.txt)
unit SciLexerOptionsDlg;
////////////////////////////////////////////////////////////////////////////////
// Unit    : SciLexerOptionsDlg
// Purpose : Component encapsulating the Options Dialog for Scintilla editors
// Created : 20/03/2003
//      $Id: SciLexerOptionsDlg.pas,v 1.5 2004/11/13 04:29:50 hdalis Exp $
// Author  : Kiriakos Vlahos (kvlahos@@london.edu)
//
// History:
// 05/12/2003 Customized and extended by hdalis for use with the
//            TScintilla and TScintillaAuto components.
//            Added Options2Page
//            (hdalis@@users.sourceforge.net)
// 29/09/2004 Initial Release with Delphi Scintilla Interface Components
// 13/10/2004 Added help using ClassExplorer 6.0, Use the helpgenerator to
//            generate the help.
//            Renamed the Scintilla properties to Editor
//            (hdalis@@users.sourceforge.net)
// 29/10/2004 Removed the opKeywords from the TSciOptionPage enum. No longer needed.
//            Renamed the opOptions2 to opColors
////////////////////////////////////////////////////////////////////////////////
interface
Uses
  SysUtils, Classes, Controls, Forms, SciLexerMod,EdOptionsWin;

Type
	TSciOptionPage = (opOptions, opColors,opHighlighter, opKeyboard);
  TSciOptionPages = set of TSciOptionPage;

  TScintillaOptionsDlg = class(TComponent)
  private
    FEditor: TScintilla;
    FActivePage: TSciOptionPage;
    FPages: TSciOptionPages;
  protected
    procedure Notification(AComponent: TComponent;
              Operation: TOperation);  override;
  public
    constructor Create(AOwner: TComponent); override;
    function Execute: Boolean;
  published
    property Editor: TScintilla read FEditor write FEditor;
    property ActivePage: TSciOptionPage read FActivePage write FActivePage default opOptions;
    property Pages: TSciOptionPages read FPages write FPages default [opOptions, opHighlighter, opKeyboard];
  end;


implementation
uses sciResLang;

{ TScintillaOptionsDlg }

constructor TScintillaOptionsDlg.Create(AOwner: TComponent);
begin
  inherited;
  FPages := [opOptions, opHighlighter, opKeyboard,opColors];
  FActivePage := opOptions;
end;

function TScintillaOptionsDlg.Execute: Boolean;
begin
  if FEditor = nil then
    raise Exception.CreateResFmt(@@sEditorPropertyNotAssigned,['TScintillaOptionsDlg']);
  with TEdOptionsWindow.Create(Self) do begin
    if not (FActivePage in FPages) then Include(FPages, FActivePage);
    ColorsPage.TabVisible := opColors in FPages;
    HighlighterPage.TabVisible := opHighlighter in FPages;
    OptionsPage.TabVisible := opOptions in FPages;
		KeyCommandsPage.TabVisible := opKeyboard in FPages;
		case FActivePage of
			opOptions : OptionPages.ActivePage := OptionsPage;
			opHighlighter : OptionPages.ActivePage := HighlighterPage;
			opKeyboard : OptionPages.ActivePage := KeyCommandsPage;
			opColors : OptionPages.ActivePage := colorsPage;
    end;
    Editor := FEditor;
    Result := ShowModal = mrOK;
    Free;
  end;
end;

procedure TScintillaOptionsDlg.Notification(AComponent: TComponent;Operation: TOperation);
begin
  inherited;
  if (AComponent = FEditor) and (Operation = opRemove) then FEditor := nil;
end;

end.
@


1.5
log
@Updated to v0.13
@
text
@d7 1
a7 1
//      $Id: $
d50 1
d64 1
a64 1
    raise Exception.Create('Scintilla property is not assigned');
@


1.4
log
@Delphi Scintilla Interface Components v0.,12
@
text
@d66 1
@


1.3
log
@no message
@
text
@d15 1
a15 1
// 29/09/2004 Initial Release with Delphi Scintilla Components
d18 1
a18 1
//            Renamed the Scintilla property to Editor
d20 2
a22 1

a23 1

d28 1
a28 1
	TSciOptionPage = (opOptions, opColors,opHighlighter, opKeywords, opKeyboard);
a30 1

a40 1

a42 1

d45 1
a45 2

    property Pages: TSciOptionPages read FPages write FPages default [opOptions, opHighlighter, opKeywords, opKeyboard];
d56 1
a56 1
  FPages := [opOptions, opHighlighter, opKeywords, opKeyboard,opColors];
a65 1
    KeywordsPage.TabVisible := opKeywords in FPages;
a71 1
			opKeywords : OptionPages.ActivePage := KeywordsPage;
d81 1
a81 2
procedure TScintillaOptionsDlg.Notification(AComponent: TComponent;
  Operation: TOperation);
@


1.2
log
@Some bugfixes, and other changes
@
text
@d7 1
d28 1
a28 1
	TSciOptionPage = (opOptions, opOptions2,opHighlighter, opKeywords, opKeyboard);
d60 1
a60 1
  FPages := [opOptions, opHighlighter, opKeywords, opKeyboard,opOptions2];
d79 1
a79 1
			opOptions2 : OptionPages.ActivePage := Options2Page;
@


1.1
log
@Initial revision
@
text
@d1 1
d14 5
d30 1
d33 1
a33 1
    FScintilla: TScintilla;
d41 1
d44 2
a45 1
    property Scintilla: TScintilla read FScintilla write FScintilla;
d47 1
d65 1
a65 1
  if FScintilla = nil then
d80 1
a80 1
    Scintilla := FScintilla;
d90 1
a90 1
  if (AComponent = FScintilla) and (Operation = opRemove) then FScintilla := nil;
@


1.1.1.1
log
@no message
@
text
@@
