head	1.5;
access;
symbols
	test:1.1.1.1 hdalis:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2004.12.03.17.19.00;	author hdalis;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.21.04.20.21;	author hdalis;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.08.00.00.42;	author hdalis;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.16.10.17.24;	author hdalis;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.01.20.56.14;	author hdalis;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.10.01.20.56.14;	author hdalis;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Delphi Scintilla Interface Components 0.15
@
text
@{
	Delphi Scintilla Interface Components
	Copyright (C) 2004, Jan Martin Pettersen (hdalis)

	This library is free software; you can redistribute it and/or
	modify it under the terms of the GNU Lesser General Public
	License as published by the Free Software Foundation; either
	version 2.1 of the License, or (at your option) any later
	version.

	This library is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
	Lesser General Public License for more details.

	You should have received a copy of the GNU Lesser General Public
	License along with this library; if not, write to the Free
	Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
	02111-1307 USA
}
{.$Define NOMACRORECORD} {Uncomment to use macrorecording hooks}

{Notice: This is here because of some intention to eventually get these
controls to support more than BCB6 and Delphi7.
These are, for now only tested with bcb6 and d7.

Drop me a hint of how (if you you had to) modify the code to get it to
work.

I'm also interested in the package source files you've created for that
version, or other contributions of code.
}

{$IFDEF BORLAND}
	{$IFDEF VER170}
		{$DEFINE COMPILER9}
		{$DEFINE DELPHI9}
		{$DEFINE DELPHICOMPILER9}
	{$ENDIF}

	{$IFDEF VER160}
		{$DEFINE COMPILER8}
		{$DEFINE DELPHI8}
		{$DEFINE DELPHICOMPILER8}
	{$ENDIF}

	{$IFDEF VER150}
		{$DEFINE COMPILER7}
		{$IFDEF BCB}
			{$DEFINE BCB7}
		{$ELSE}
			{$DEFINE DELPHI7}
			{$DEFINE DELPHICOMPILER7}
		{$ENDIF}
	{$ENDIF}

	{$IFDEF VER140}
		{$DEFINE COMPILER6}
		{$IFDEF BCB}
			{$DEFINE BCB6}
		{$ELSE}
			{$DEFINE DELPHI6}
			{$DEFINE DELPHICOMPILER6}
		{$ENDIF}
	{$ENDIF}

	{$IFDEF VER130}
		{$DEFINE COMPILER5}
		{$IFDEF BCB}
			{$DEFINE BCB5}
		{$ELSE}
			{$DEFINE DELPHI5}
			{$DEFINE DELPHICOMPILER5}
		{$ENDIF}
	{$ENDIF}

	{$IFDEF BCB}
		{$DEFINE CPPBUILDER}
		{$DEFINE BCBCOMPILER}
	{$ELSE ~BCB}
		{$DEFINE DELPHI}
		{$DEFINE DELPHICOMPILER}
	{$ENDIF ~BCB}

{$ENDIF}@


1.4
log
@Delphi Scintilla Interface Components 0.14
@
text
@d22 64
@


1.3
log
@Delphi Scintilla Interface Components v0.,12
@
text
@d21 1
a21 10
//LEXWALKER
{
 If defined, and if support for it exists in SciLexer.dll
 (you can get a little file from the site that instructs on how
 to insert the little fix into the sourcecode of Scintilla, and then you
 must recompile.)
 you can scan the SciLexer.Dll for what lexers it contains via
 TSciSynLexer.RescanLexerNameMap.
}
{.$DEFINE USELEXWALKER}@


1.2
log
@Some bugfixes, and other changes
@
text
@d21 10
@


1.1
log
@Initial revision
@
text
@d1 20
a20 1
{$Define USEDOCTABCTRL}
@


1.1.1.1
log
@no message
@
text
@@
